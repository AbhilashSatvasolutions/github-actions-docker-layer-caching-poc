# Increase number to trigger CI -> 0
name: Docker Image CI
on:
  push: {}
jobs:
  build_no_cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker build . -t thing
  build_no_cache_buildkit:
    env:
      DOCKER_BUILDKIT: '1'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker build . -t thing
  build_with_docker_save_load:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: cache-docker
      uses: actions/cache@v1
      with:
        path: /tmp/docker-save
        key: docker-save-${{ hashFiles('Dockerfile') }}
    - run: docker load -i /tmp/docker-save/snapshot.tar || true
      if: steps.cache-docker.outputs.cache-hit == 'true'
    - run: docker info
    - run: docker build . -t thing --cache-from=thing-cache
    - run: docker tag thing thing-cache && mkdir -p /tmp/docker-save && docker save thing-cache -o /tmp/docker-save/snapshot.tar && ls -lh /tmp/docker-save || true
      if: always() && steps.cache-docker.outputs.cache-hit != 'true'
  build_with_local_registry:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: cache-docker
        uses: actions/cache@v1
        with:
          path: /tmp/docker-registry
          key: docker-registry-no-buildkit-${{ hashFiles('Dockerfile') }}
      - run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2
      - run: npx wait-on tcp:5000 && docker pull localhost:5000/thing || true
      - run: docker build . -t thing --cache-from=localhost:5000/thing
      - run: docker tag thing localhost:5000/thing && docker push localhost:5000/thing || true
        if: steps.cache.outputs.cache-hit != 'true'
  build_with_local_registry_buildkit:
    env:
      DOCKER_BUILDKIT: '1'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: cache-docker
        uses: actions/cache@v1
        with:
          path: /tmp/docker-registry
          key: docker-registry-buildkit-${{ hashFiles('Dockerfile') }}
      - run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2
      - run: npx wait-on tcp:5000
      - run: docker build . -t thing --cache-from=localhost:5000/thing --build-arg BUILDKIT_INLINE_CACHE=1
      - run: docker tag thing localhost:5000/thing && docker push localhost:5000/thing || true
        if: steps.cache.outputs.cache-hit != 'true'
